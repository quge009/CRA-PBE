lpmodel
solve(lpmodel)
get.objective(lpmodel)
get.variables(lpmodel) #see 44 to checl
get.sensitivity.obj(lpmodel) #sensitivity of obj of c!!#see 44 to checl!
get.sensitivity.rhs(lpmodel)#ersten paar sind sens. of constraints
lpmodel<-make.lp(nrow=0,ncol=4)
lp.control(lpmodel, sense="max")
set.objfn(lpmodel,c(3,2,3,3))
add.constraint(lpmodel,c(4,1,1,1),"<=",3+4)
add.constraint(lpmodel,c(1,1,2,3),"<=",4+4)
add.constraint(lpmodel,c(3,2,2,3),"<=",10+4)
lpmodel
solve(lpmodel)
get.objective(lpmodel)
get.variables(lpmodel) #see 44 to checl
get.sensitivity.obj(lpmodel) #sensitivity of obj of c!!#see 44 to checl!
get.sensitivity.rhs(lpmodel)#ersten paar sind sens. of constraints
lpmodel<-make.lp(nrow=0,ncol=4)
lp.control(lpmodel, sense="max")
set.objfn(lpmodel,c(3,2,3,3))
add.constraint(lpmodel,c(4,1,1,1),"<=",3+4)
add.constraint(lpmodel,c(1,1,2,3),"<=",4+4)
add.constraint(lpmodel,c(3,2,2,3),"<=",10+4.1)
lpmodel
solve(lpmodel)
get.objective(lpmodel)
get.variables(lpmodel) #see 44 to checl
get.sensitivity.obj(lpmodel) #sensitivity of obj of c!!#see 44 to checl!
get.sensitivity.rhs(lpmodel)#ersten paar sind sens. of constraints
lpmodel<-make.lp(nrow=0,ncol=4)
lp.control(lpmodel, sense="max")
add.constraint(lpmodel,c(4,1,1,1),"<=",3+4.1)
set.objfn(lpmodel,c(3,2,3,3))
add.constraint(lpmodel,c(1,1,2,3),"<=",4+4.1)
add.constraint(lpmodel,c(3,2,2,3),"<=",10+4.1)
lpmodel
solve(lpmodel)
get.objective(lpmodel)
get.variables(lpmodel) #see 44 to checl
get.sensitivity.obj(lpmodel) #sensitivity of obj of c!!#see 44 to checl!
get.sensitivity.rhs(lpmodel)#ersten paar sind sens. of constraints
lpmod2<-make.lp(nrow=0,ncol=4)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,3),"<=",3)
add.constraint(lpmod2,c(1,1,2,3,3),"<=",4)
add.constraint(lpmod2,c(3,2,2,3,3),"<=",10)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
get.variables(lpmod2) #see 44 to checl
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,2),"<=",3)
add.constraint(lpmod2,c(1,1,2,3,2),"<=",4)
add.constraint(lpmod2,c(3,2,2,3,2),"<=",10)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
get.variables(lpmod2) #see 44 to checl
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,2.1),"<=",3)
add.constraint(lpmod2,c(1,1,2,3,2.1),"<=",4)
add.constraint(lpmod2,c(3,2,2,3,2.1),"<=",10)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
get.variables(lpmod2) #see 44 to checl
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,50),"<=",3)
add.constraint(lpmod2,c(1,1,2,3,50),"<=",4)
add.constraint(lpmod2,c(3,2,2,3,50),"<=",10)
lpmod2<-make.lp(nrow=0,ncol=5)
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,50),"<=",3)
lp.control(lpmod2, sense="max")
add.constraint(lpmod2,c(1,1,2,3,50),"<=",4)
add.constraint(lpmod2,c(3,2,2,3,50),"<=",10)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
get.variables(lpmod2) #see 44 to checl
a<-4
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,a),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,a),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,a),"<=",10+a)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
a<-3.7
lp.control(lpmod2, sense="max")
lpmod2<-make.lp(nrow=0,ncol=5)
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,a),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,a),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,a),"<=",10+a)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
get.variables(lpmod2) #see 44 to checl
a<-3.7
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,a),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,a),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,a),"<=",10+a)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
get.variables(lpmod2) #see 44 to checl
a<-3.3
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,a),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,a),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,a),"<=",10+a)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
get.variables(lpmod2) #see 44 to checl
a<-2
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,a),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,a),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,a),"<=",10+a)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
get.variables(lpmod2) #see 44 to checl
a<-2.1
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,a),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,a),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,a),"<=",10+a)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
get.variables(lpmod2) #see 44 to checl
a<-2.01
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,a),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,a),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,a),"<=",10+a)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
get.variables(lpmod2) #see 44 to checl
a<-1
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,a),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,a),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,a),"<=",10+a)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
get.variables(lpmod2) #see 44 to checl
get.dual.solution(lpmod2)
# 5
lpmodel<-make.lp(nrow=0,ncol=4)
lp.control(lpmodel, sense="max")
set.objfn(lpmodel,c(15,20,55,20))
# 2
library(lpSolveAPI)
# 5
lpmodel<-make.lp(nrow=0,ncol=4)
lp.control(lpmodel, sense="max")
set.objfn(lpmodel,c(15,20,55,20))
add.constraint(lpmodel,c(1,1,1,1),"=",1)
add.constraint(lpmodel,c(0.1,0.4,-0.1,-0.6),"=",0)
add.constraint(lpmodel,c(-0.1,-0.4,0.1,0.6),"=",0)
lpmodel
solve(lpmodel)
get.objective(lpmodel)
get.variables(lpmodel) #see 44 to checl
P<-matrix(c(0.6,0.4,0.1,0.9),nrow=2,byrow=TRUE)
P
eigen(t(P))
eigen(t(P))$vectors[,1]/sum(eigen(t(P))$vectors[,1])
lpmodel<-make.lp(nrow=0,ncol=3)
lp.control(lpmodel, sense="max")
set.objfn(lpmodel,c(1,-2,1))
set.objfn(lpmodel,c(1,-2,1))
add.constraint(lpmodel,c(-1,1,0),"<=",3+4.1)
add.constraint(lpmodel,c(1,1,1),"<=",4+4.1)
lpmodel
solve(lpmodel)
get.objective(lpmodel)
get.variables(lpmodel) #see 44 to checl
lpmodel<-make.lp(nrow=0,ncol=3)
lp.control(lpmodel, sense="max")
set.objfn(lpmodel,c(1,-2,1))
add.constraint(lpmodel,c(-1,1,0),"<=",2)
add.constraint(lpmodel,c(1,1,1),"<=",3)
lpmodel
solve(lpmodel)
get.objective(lpmodel)
get.variables(lpmodel) #see 44 to checl
B1<-matrix(c(0,4,8,12,16,0,2,5,8,11),nrow=2,byrow=TRUE)
B2<-matrix(c(0,8,16,0,5.5,11),norw=2,byrow=TRUE)
B2<-matrix(c(0,8,16,0,5.5,11),nrow=2,byrow=TRUE)
B3<-matrix(c(0,3,6,9,12,15,0,2,4,6,8,10),nrow=2,byrow=TRUE)
out<-array(0,dim=c(5,3,6))
B1[1,]
for(s1 in 1:5){
for (s2 in 1:3){
for (s3 in 1:6){
spent<-B1[1,s1]+B2[1,s2]+B3[1,s3]
if (spent>17){
out[s1,s2,s3]<-0
}else{
out[s1,s2,s3]<-B1[2,s1]+B2[2,s2]+B3[2,s3]
}
}
}
}
out
max(out)
sqequnce(-3,5,0.5)
seqqunce(-3,5,0.5)
seqeunce(-3,5,0.5)
sequence(-3,5,0.5)
seq(-3,5,0.5)
for(a in seq(-3,5,0.5))
a=0
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,a),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,a),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,a),"<=",10+a)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,3),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,3),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,3),"<=",10+a)
lpmod2
solve(lpmod2)
get.objective(lpmod2)
get.variables(lpmod2) #see 44 to checl
get.dual.solution(lpmod2)
get.dual.solution(lpmod2)[4]
save<-data.frame(a=0,x2=0,x3=0,s3=0,obj=0)
save$a[1]
save$a[2]
save$a[3]<-3
save$a[2]<-1
save[2,]$a<-1
save
get.variables(lpmod2)
save<-data.frame(a=0,x2=0,x3=0,s3=0,obj=0)
i=1
for(a in seq(-3,5,0.5)){
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,3),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,3),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,3),"<=",10+a)
lpmod2
solve(lpmod2)
save[i,]$a<-a
save[i,]$obj<-get.objective(lpmod2)
save[i,]$x2<-get.variables(lpmod2)[2]
save[i,]$x3<-get.variables(lpmod2)[3]
save[i,]$s3<-get.dual.solution(lpmod2)[4]
i=i+1
}
save
save<-data.frame(a=0,x2=0,x3=0,s3=0,obj=0)
i=1
for(a in seq(-3,5,0.5)){
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,3),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,3),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,3),"<=",10+a)
lpmod2
solve(lpmod2)
save[i,]$a<-a
save[i,]$obj<-get.objective(lpmod2)
save[i,]$x2<-get.variables(lpmod2)[2]
save[i,]$x3<-get.variables(lpmod2)[3]
save[i,]$s3<-get.dual.solution(lpmod2)[4]
i=i+1
}
save
save<-data.frame(a=0,x2=0,x3=0,s3=0,obj=0)
i=1
for(a in seq(-3,5,0.5)){
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,a),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,a),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,a),"<=",10+a)
lpmod2
solve(lpmod2)
save[i,]$a<-a
save[i,]$obj<-get.objective(lpmod2)
save[i,]$x2<-get.variables(lpmod2)[2]
save[i,]$x3<-get.variables(lpmod2)[3]
save[i,]$s3<-get.dual.solution(lpmod2)[4]
i=i+1
}
save
save<-data.frame(a=0,x2=0,x3=0,s3=0,obj=0)
i=1
for(a in seq(-3,5,0.5)){
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3))
add.constraint(lpmod2,c(4,1,1,1),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3),"<=",10+a)
lpmod2
solve(lpmod2)
save[i,]$a<-a
save[i,]$obj<-get.objective(lpmod2)
save[i,]$x2<-get.variables(lpmod2)[2]
save[i,]$x3<-get.variables(lpmod2)[3]
save[i,]$s3<-get.dual.solution(lpmod2)[4]
i=i+1
}
save<-data.frame(a=0,x2=0,x3=0,s3=0,obj=0)
i=1
for(a in seq(-3,5,0.5)){
lpmod2<-make.lp(nrow=0,ncol=4)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,4))
add.constraint(lpmod2,c(4,1,1,1),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3),"<=",10+a)
lpmod2
solve(lpmod2)
save[i,]$a<-a
save[i,]$obj<-get.objective(lpmod2)
save[i,]$x2<-get.variables(lpmod2)[2]
save[i,]$x3<-get.variables(lpmod2)[3]
save[i,]$s3<-get.dual.solution(lpmod2)[4]
i=i+1
}
save
a<-4
lpmod2<-make.lp(nrow=0,ncol=4)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,4))
add.constraint(lpmod2,c(4,1,1,1),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3),"<=",10+a)
lpmod2
solve(lpmod2)
get.objective
get.objective(lpmod2)
get.variables(lpmod2)
a<-4.1
lpmod2<-make.lp(nrow=0,ncol=4)
lp.control(lpmod2, sense="max")
add.constraint(lpmod2,c(4,1,1,1),"<=",3+a)
set.objfn(lpmod2,c(3,2,3,4))
add.constraint(lpmod2,c(1,1,2,3),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3),"<=",10+a)
lpmod2
solve(lpmod2)
get.variables(lpmod2)
save<-data.frame(a=0,x2=0,x3=0,s3=0,obj=0)
i=1
for(a in seq(-3,5,0.5)){
lpmod2<-make.lp(nrow=0,ncol=3)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3))
add.constraint(lpmod2,c(4,1,1,1),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3),"<=",10+a)
lpmod2
solve(lpmod2)
save[i,]$a<-a
save[i,]$obj<-get.objective(lpmod2)
save[i,]$x2<-get.variables(lpmod2)[2]
save[i,]$x3<-get.variables(lpmod2)[3]
save[i,]$s3<-get.dual.solution(lpmod2)[4]
i=i+1
}
save
save<-data.frame(a=0,x2=0,x3=0,s3=0,obj=0)
i=1
for(a in seq(-3,5,0.5)){
lpmod2<-make.lp(nrow=0,ncol=3)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3))
add.constraint(lpmod2,c(4,1,1,1),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3),"<=",10+a)
lpmod2
solve(lpmod2)
save[i,]$a<-a
save[i,]$obj<-get.objective(lpmod2)
save[i,]$x2<-get.variables(lpmod2)[2]
save[i,]$x3<-get.variables(lpmod2)[3]
save[i,]$s3<-get.dual.solution(lpmod2)[4]
i=i+1
}
save
save<-data.frame(a=0,x2=0,x3=0,s3=0,obj=0)
i=1
for(a in seq(-3,5,0.5)){
lpmod2<-make.lp(nrow=0,ncol=4)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3))
add.constraint(lpmod2,c(4,1,1,1),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3),"<=",10+a)
lpmod2
solve(lpmod2)
save[i,]$a<-a
save[i,]$obj<-get.objective(lpmod2)
save[i,]$x2<-get.variables(lpmod2)[2]
save[i,]$x3<-get.variables(lpmod2)[3]
save[i,]$s3<-get.dual.solution(lpmod2)[4]
i=i+1
}
save
save<-data.frame(a=0,x2=0,x3=0,s3=0,obj=0)
i=1
for(a in seq(-3,5,0.1)){
lpmod2<-make.lp(nrow=0,ncol=4)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3))
add.constraint(lpmod2,c(4,1,1,1),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3),"<=",10+a)
lpmod2
solve(lpmod2)
save[i,]$a<-a
save[i,]$obj<-get.objective(lpmod2)
save[i,]$x2<-get.variables(lpmod2)[2]
save[i,]$x3<-get.variables(lpmod2)[3]
save[i,]$s3<-get.dual.solution(lpmod2)[4]
i=i+1
}
save
save<-data.frame(a=0,x2=0,x3=0,s3=0,obj=0)
i=1
for(a in seq(-3,5,0.1)){
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,a),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,a),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,a),"<=",10+a)
lpmod2
solve(lpmod2)
save[i,]$a<-a
save[i,]$obj<-get.objective(lpmod2)
save[i,]$x2<-get.variables(lpmod2)[2]
save[i,]$x3<-get.variables(lpmod2)[3]
save[i,]$s3<-get.dual.solution(lpmod2)[4]
i=i+1
}
save
a<-1
lpmod2<-make.lp(nrow=0,ncol=5)
lp.control(lpmod2, sense="max")
set.objfn(lpmod2,c(3,2,3,3,4))
add.constraint(lpmod2,c(4,1,1,1,a),"<=",3+a)
add.constraint(lpmod2,c(1,1,2,3,a),"<=",4+a)
add.constraint(lpmod2,c(3,2,2,3,a),"<=",10+a)
lpmod2
solve(lpmod2)
get.variables(lpmod2)
get.objective(lpmod2)
get.dual.solution
get.dual.solution(lpmod2)
qnorm(1.3)
?qnorm
pnorm(1.3)
pnorm(-1.3)
pnorm(1.30325,lower.tail = FALSE)
pnorm(1.30,lower.tail = FALSE)
pnorm(1.30325,lower.tail = FALSE)*exp(-0.05)
pnorm(1.30,lower.tail = FALSE)*exp(-0.05)
source('C:/Users/Vinzenz/eclipse-workspace/OutputDutchFPSB3/DutchFPSB3Prediction.R', echo=TRUE)
source('C:/Users/Vinzenz/eclipse-workspace/OutputDutchFPSB3/DutchFPSB3Analysis.R', echo=TRUE)
setwd("C:/Users/Vinzenz/eclipse-workspace/OutputDutchFPSB3")
rm(list = ls())
library(plotly)
options(warn=-1)
source("setup.txt")
source('C:/Users/Vinzenz/eclipse-workspace/OutputDutchFPSB3/DutchFPSB3Analysis.R', echo=TRUE)
